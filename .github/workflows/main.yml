name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    env:
      SKIP_MODEL_LOAD: "1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code
        run: |
          pip install flake8
          flake8 src/

      - name: Run tests
        run: |
          pip install pytest
          pytest tests/
          
  docker:
    needs: lint-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/iris-api:latest .

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/iris-api:latest

  deploy-to-ec2:
    needs: docker  # Run after the Docker build job
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.OCI_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      - name: Run container on EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER_AND_HOST }} << 'EOF'
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Pull latest image
            docker compose pull

            # Stop old containers and start new ones
            docker compose down
            docker compose up -d
          EOF

